// Generated by view binder compiler. Do not edit!
package elapor.application.com.elapor.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.SurfaceView;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import elapor.application.com.elapor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAmbilFotoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnCapture;

  @NonNull
  public final ImageButton btnRotate;

  @NonNull
  public final FrameLayout layout;

  @NonNull
  public final SurfaceView surfaceView;

  private ActivityAmbilFotoBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton btnCapture, @NonNull ImageButton btnRotate, @NonNull FrameLayout layout,
      @NonNull SurfaceView surfaceView) {
    this.rootView = rootView;
    this.btnCapture = btnCapture;
    this.btnRotate = btnRotate;
    this.layout = layout;
    this.surfaceView = surfaceView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAmbilFotoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAmbilFotoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ambil_foto, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAmbilFotoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCapture;
      ImageButton btnCapture = rootView.findViewById(id);
      if (btnCapture == null) {
        break missingId;
      }

      id = R.id.btnRotate;
      ImageButton btnRotate = rootView.findViewById(id);
      if (btnRotate == null) {
        break missingId;
      }

      id = R.id.layout;
      FrameLayout layout = rootView.findViewById(id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.surfaceView;
      SurfaceView surfaceView = rootView.findViewById(id);
      if (surfaceView == null) {
        break missingId;
      }

      return new ActivityAmbilFotoBinding((RelativeLayout) rootView, btnCapture, btnRotate, layout,
          surfaceView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
