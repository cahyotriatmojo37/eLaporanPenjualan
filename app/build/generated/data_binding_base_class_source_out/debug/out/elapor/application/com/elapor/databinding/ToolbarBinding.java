// Generated by view binder compiler. Do not edit!
package elapor.application.com.elapor.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.widget.CardView;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import customfonts.MyEditText;
import customfonts.MyTextView;
import elapor.application.com.elapor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolbarBinding implements ViewBinding {
  @NonNull
  private final Toolbar rootView;

  @NonNull
  public final CardView blockSearch;

  @NonNull
  public final ImageButton btnClose;

  @NonNull
  public final MyTextView btnSearch;

  @NonNull
  public final RelativeLayout cardviewSearch;

  @NonNull
  public final LinearLayout linearUtama;

  @NonNull
  public final ImageView menu;

  @NonNull
  public final MyEditText searchtext;

  @NonNull
  public final MyTextView title;

  @NonNull
  public final Toolbar toolbar;

  private ToolbarBinding(@NonNull Toolbar rootView, @NonNull CardView blockSearch,
      @NonNull ImageButton btnClose, @NonNull MyTextView btnSearch,
      @NonNull RelativeLayout cardviewSearch, @NonNull LinearLayout linearUtama,
      @NonNull ImageView menu, @NonNull MyEditText searchtext, @NonNull MyTextView title,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.blockSearch = blockSearch;
    this.btnClose = btnClose;
    this.btnSearch = btnSearch;
    this.cardviewSearch = cardviewSearch;
    this.linearUtama = linearUtama;
    this.menu = menu;
    this.searchtext = searchtext;
    this.title = title;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public Toolbar getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.block_search;
      CardView blockSearch = rootView.findViewById(id);
      if (blockSearch == null) {
        break missingId;
      }

      id = R.id.btn_close;
      ImageButton btnClose = rootView.findViewById(id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_search;
      MyTextView btnSearch = rootView.findViewById(id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.cardview_search;
      RelativeLayout cardviewSearch = rootView.findViewById(id);
      if (cardviewSearch == null) {
        break missingId;
      }

      id = R.id.linear_utama;
      LinearLayout linearUtama = rootView.findViewById(id);
      if (linearUtama == null) {
        break missingId;
      }

      id = R.id.menu;
      ImageView menu = rootView.findViewById(id);
      if (menu == null) {
        break missingId;
      }

      id = R.id.searchtext;
      MyEditText searchtext = rootView.findViewById(id);
      if (searchtext == null) {
        break missingId;
      }

      id = R.id.title;
      MyTextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      Toolbar toolbar = (Toolbar) rootView;

      return new ToolbarBinding((Toolbar) rootView, blockSearch, btnClose, btnSearch,
          cardviewSearch, linearUtama, menu, searchtext, title, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
